<?xml version="1.0" encoding="utf-8"?>
<quartz version="1.1" xmlns="http://www.quartzscheduler.org/ns/quartz" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.quartzscheduler.org/ns/quartz http://www.quartzscheduler.org/ns/quartz/job_scheduling_data_1_1.xsd">
	<list>
		<listjob>invoiceExportForBatchStagingJob</listjob>
		<listjob>invoiceImportForBatchStagingJob</listjob>
		<listjob>ComdataOutboundJob</listjob>
		<listjob>CambridgeOutboundJob</listjob>
		<listjob>CambridgeInboundJob</listjob>
		<listjob>ComdataInboundJob</listjob>
	</list>
	<job>
		<job-detail>
			<name>invoiceExportForBatchStagingJob</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.InvoiceExportForBatchStagingJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
			<entry>
                    <key>service</key>
                    <value>outBoundForBatchStaging</value>
                </entry>
            </job-data-map>
		</job-detail>
		<trigger>
			<cron>
				<name>invoiceExportForBatchStagingJob</name>
				<group>invoiceOutputGroup</group>
				<job-name>allTrigger</job-name>
				<job-group>allTriggers</job-group>				
				<cron-expression>0 3/10 * ? * *</cron-expression> <!-- every 10mins starting :03 of the hour-->
				<!--<cron-expression>0 0/6 * 1/1 * ? *</cron-expression>-->
				<!--cron-expression>0 0 4 1/1 * ? *</cron-expression-->
				
			</cron>
		</trigger>
	</job>

	
	<job>
		<job-detail>
			<name>invoiceImportForBatchStagingJob</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.InvoiceExportForBatchStagingJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
                <entry>
                    <key>inputFolder</key>
                    <value>E:\\MiriaSystems\\DEV10\\Interfaces\\Inbound\\PostingReply</value>
                </entry>				
				<entry>
                    <key>fileName</key>
                    <value>paidInvoice*.txt</value>
                </entry>	
				<entry>
                    <key>service</key>
                    <value>inBoundForBatchStaging</value>
                </entry>
				<entry>
                    <key>archiveFilePath</key>
                    <value>E:\\MiriaSystems\\DEV10\\Interfaces\\Inbound\\PostingReply\\Archive</value>
                </entry>
				<entry>
                    <key>headerNames</key>
                    <value>BankAccountNumber|CheckNumber|CheckAmount|ClearingDate</value>
                </entry>				
            </job-data-map>
		</job-detail>
		<trigger>
			<cron>
				<name>invoiceImportForBatchStagingJob</name>
				<group>invoiceOutputGroup</group>
				<job-name>allTrigger</job-name>
				<job-group>allTriggers</job-group>
				<cron-expression>0 9/10 * ? * *</cron-expression> <!-- every 10mins starting :09 of the hour-->
				<!--<cron-expression>0 0/11 * 1/1 * ? *</cron-expression>-->
				<!--cron-expression>0 0 4 1/1 * ? *</cron-expression-->
				
			</cron>
		</trigger>
	</job>

	<job>
		<job-detail>
			<name>ComdataOutboundJob</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.DCBPaymentExportJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
                <entry>
                    <key>outputFolder</key>
                    <value>E:\\MiriaSystems\\DEV10\\Interfaces\\OutBound\\PaymentExport\\ComdataFiles</value>
                </entry>
				<entry>
                    <key>archiveFolder</key> <!-- used for the file thats being zipped since it can't be deleted -->
                    <value>E:\\MiriaSystems\\DEV10\\Interfaces\\OutBound\\PaymentExport\\Archive</value>
                </entry>
				<entry>
                    <key>templateFileName</key>
                    <value>COMDATA-PAYMENTS</value>
                </entry>
				<entry>
                    <key>zipTemplateFile</key>
                    <value>false</value>
                </entry>
				<entry>
                    <key>templateFileExtension</key>
                    <value>.csv</value>
                </entry>
				<entry>
                    <key>manifestTemplateFileName</key>
                    <value>DCB-PAYMENTS-MANIFEST</value>
                </entry>
				<entry>
                    <key>zipManifestTemplateFile</key>
                    <value>false</value>
                </entry>
				<entry>
					<key>createManifest</key>
					<value>false</value>
				</entry>
				<entry>
                    <key>manifestTemplateFileExtension</key>
                    <value>.osgx</value>
                </entry>
				<entry>
					<key>interfaceJobName</key>
					<value>COMDATA_PAYMENTS</value>
				</entry>
				<entry>
                    <key>emailTemplateName</key>
                    <value>paymentEmail</value>
                </entry>
				<entry>
					<key>sendEmail</key>
					<value>true</value>
				</entry>
				<entry>
                    <key>recipient</key>
                    <value>gtonn@miriasystems.com</value>
				</entry>
				<entry>
					<key>attachFile</key>
					<value>false</value>
				</entry>
				<entry>
					<key>isDCB</key>
					<value>true</value>
				</entry>
				<entry>
					<key>useManualFileName</key>
					<value>true</value>
				</entry>
				<entry>
					<key>manualFileName</key>
					<value>MIRIA_PAYMENT_</value>
				</entry>
            </job-data-map>
		</job-detail>
		<trigger>
			<cron>
				<name>ComdataOutboundJob</name>
				<group>invoiceOutputGroup</group>
				<job-name>allTrigger</job-name>
				<job-group>allTriggers</job-group>
				<!--<cron-expression>0 10 3/3 ? * *</cron-expression>--> <!-- 3:10am etc -->
				<cron-expression>0 8/10 * ? * *</cron-expression> <!-- every 10mins starting :08 of the hour-->
			</cron>
		</trigger>
	</job>
	<!-- 21 -->
	<job>
		<job-detail>
			<name>CambridgeOutboundJob</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.DCBPaymentExportJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
                <entry>
                    <key>outputFolder</key>
                    <value>E:\\MiriaSystems\\DEV10\\Interfaces\\OutBound\\PaymentExport\\CambridgeFiles</value>
                </entry>
				<entry>
                    <key>archiveFolder</key> <!-- used for the file thats being zipped since it can't be deleted -->
                    <value>E:\\MiriaSystems\\DEV10\\Interfaces\\OutBound\\PaymentExport\\Archive</value>
                </entry>
				<entry>
                    <key>templateFileName</key>
                    <value>CAMBRIDGE-PAYMENTS</value>
                </entry>
				<entry>
                    <key>zipTemplateFile</key>
                    <value>false</value>
                </entry>
				<entry>
                    <key>templateFileExtension</key>
                    <value>.csv</value>
                </entry>
				<entry>
                    <key>manifestTemplateFileName</key>
                    <value>DCB-PAYMENTS-MANIFEST</value>
                </entry>
				<entry>
                    <key>zipManifestTemplateFile</key>
                    <value>false</value>
                </entry>
				<entry>
					<key>createManifest</key>
					<value>false</value>
				</entry>
				<entry>
                    <key>manifestTemplateFileExtension</key>
                    <value>.osgx</value>
                </entry>
				<entry>
					<key>interfaceJobName</key>
					<value>CAMBRIDGE_PAYMENTS</value>
				</entry>
				<entry>
                    <key>emailTemplateName</key>
                    <value>paymentEmail</value>
                </entry>
				<entry>
					<key>sendEmail</key>
					<value>true</value>
				</entry>
				<entry>
                    <key>recipient</key>
                    <value>gtonn@miriasystems.com</value>
				</entry>
				<entry>
					<key>attachFile</key>
					<value>false</value>
				</entry>
				<entry>
					<key>isDCB</key>
					<value>true</value>
				</entry>
				<entry>
					<key>useManualFileName</key>
					<value>true</value>
				</entry>
				<entry>
					<key>manualFileName</key>
					<value>MIRIA_PAYMENT_</value>
				</entry>
            </job-data-map>
		</job-detail>
		<trigger>
			<cron>
				<name>CambridgeOutboundJob</name>
				<group>invoiceOutputGroup</group>
				<job-name>allTrigger</job-name>
				<job-group>allTriggers</job-group>
				<!--<cron-expression>0 20 3/3 ? * *</cron-expression>--> <!-- 3:20am etc -->
				<cron-expression>0 1/10 * ? * *</cron-expression> <!-- every 10mins starting :01 of the hour-->
			</cron>
		</trigger>
	</job>
	<!--<job>
		<job-detail>
			<name>DCB_PAYMENTS</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.DCBPaymentExportJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
                <entry>
                    <key>outputFolder</key>
                    <value>E:\\MiriaSystems\\DEV10\\Interfaces\\OutBound\\PaymentExport\\DCBFiles</value>
                </entry>
				<entry>
                    <key>archiveFolder</key>--> <!-- used for the file thats being zipped since it can't be deleted -->
                    <!--<value>E:\\MiriaSystems\\DEV10\\Interfaces\\OutBound\\PaymentExport\\Archive</value>
                </entry>
				<entry>
                    <key>templateFileName</key>
                    <value>DCB-PAYMENTS</value>
                </entry>
				<entry>
                    <key>zipTemplateFile</key>
                    <value>true</value>
                </entry>
				<entry>
                    <key>templateFileExtension</key>
                    <value>.xml</value>
                </entry>
				<entry>
                    <key>manifestTemplateFileName</key>
                    <value>DCB-PAYMENTS-MANIFEST</value>
                </entry>
				<entry>
                    <key>zipManifestTemplateFile</key>
                    <value>false</value>
                </entry>
				<entry>
                    <key>manifestTemplateFileExtension</key>
                    <value>.osgx</value>
                </entry>
				<entry>
					<key>interfaceJobName</key>
					<value>DCB_PAYMENTS</value>
				</entry>
				<entry>
                    <key>emailTemplateName</key>
                    <value>paymentEmail</value>
                </entry>
				<entry>
					<key>sendEmail</key>
					<value>true</value>
				</entry>
				<entry>
                    <key>recipient</key>
                    <value>nbanko@miriasystems.com</value>
				</entry>
				<entry>
					<key>attachFile</key>
					<value>false</value>
				</entry>
				<entry>
					<key>isDCB</key>
					<value>true</value>
				</entry>
				<entry>
					<key>useManualFileName</key>
					<value>true</value>
				</entry>
				<entry>
					<key>manualFileName</key>
					<value>MIRIA_BRANDYWINE_DCBSTANDARDXML_</value>
				</entry>
            </job-data-map>
		</job-detail>
		<trigger>
			<cron>
				<name>DCB_PAYMENTS</name>
				<group>invoiceOutputGroup</group>
				<job-name>allTrigger</job-name>
				<job-group>allTriggers</job-group>
				<cron-expression>0 9/12 * ? * *</cron-expression>--> <!-- every 12mins starting :09 of the hour-->
			<!--</cron>
		</trigger>
	</job>-->
	<!--<job>
		<job-detail>
			<name>invoiceImportForDCBResponseInBound</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.InvoiceExportForBatchStagingJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
				<entry>
					<key>inputFolder</key>
					<value>E:\\MiriaSystems\\DEV10\\Interfaces\\Inbound\\PostingReply\\DCB</value>
				</entry>                                                          
				<entry>
					<key>fileName</key>
					<value>*.txt</value>
				</entry>             
					<entry>
					<key>service</key>
					<value>inBoundDCBResponse</value>
				</entry>
				<entry>
					<key>archiveFilePath</key>
					<value>E:\\MiriaSystems\\DEV10\\Interfaces\\Inbound\\PostingReply\\Archive</value>
				</entry>
				<entry>
					<key>headerNames</key>
					<value>RefID|Status|VendorID|InvoiceNumber|InvoiceAmount|InvoiceDate|PaidAmount|Currency|PaidDate|PaidReferenceNumber|ErrorCode|Details</value>
				</entry>   
				<entry>
					<key>isHeader</key>
					<value>true</value>
				</entry> 				
			</job-data-map>
		</job-detail>
		<trigger>
			<cron>
			<name>invoiceImportForDCBResponseInBound</name>
			<group>invoiceOutputGroup</group>
			<job-name>allTrigger</job-name>
			<job-group>allTriggers</job-group>
			<cron-expression>0 1/10 * ? * *</cron-expression>--> <!-- every 10mins starting :01 of the hour-->
			<!--<cron-expression>0 13 21 1/1 * ? *</cron-expression>--> <!-- daily at 21:13-->
			<!--<cron-expression>0 0/11 * 1/1 * ? *</cron-expression>-->
			<!--cron-expression>0 0 4 1/1 * ? *</cron-expression-->

			<!--</cron>
		</trigger>
	</job>-->
	<!-- MIR-1488 -->
	<job>
		<job-detail>
			<name>CambridgeInboundJob</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.CambridgePaymentJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
				<entry>
					<key>inputFolder</key>
					<value>E:\\MiriaSystems\\DEV10\\Interfaces\\Inbound\\PostingReply\\Cambridge</value>
				</entry>                                                          
				<entry>
					<key>fileName</key>
					<value>*.csv</value>
				</entry>             
				<entry>
                    <key>headerNames</key>				
                    <value>ClientCode|PayeeID|PayeeName|PayeeCurrency|LocalCurrency|NetLocalAmount|PaymentAmount|PaymentReference|DealNumber|InternalReference|Rate|IsModified|IsDeleted|BookDate|BookedPaymentAmount|BookedPaymentCurrency|BookedSettlementAmount|BookedSettlementCurrency|FeeAmount|FeeCurrency</value>
                </entry>
				<entry>
					<key>headerline</key>
					<value>true</value>
				</entry>
			</job-data-map>
		</job-detail>
		<trigger>
			<cron>
				<name>CambridgeInboundJob</name>
				<group>invoiceOutputGroup</group>
				<job-name>allTrigger</job-name>
				<job-group>allTriggers</job-group>
				<cron-expression>0 2/10 * ? * *</cron-expression> <!-- every 10mins starting :02 of the hour-->
			</cron> 
		</trigger>
	</job>
	
	<job>
		<job-detail>
			<name>ComdataInboundJob</name>
			<group>invoiceOutputGroup</group>
			<job-class>com.miriasystems.custom.etl.jobs.ComdataPaymentJob</job-class>
			<volatility>false</volatility>
			<durability>false</durability>
			<recover>false</recover>
			<job-data-map allows-transient-data="true">
				<entry>
					<key>inputFolder</key>
					<value>E:\\MiriaSystems\\DEV10\\Interfaces\\Inbound\\PostingReply\\Comdata</value>
				</entry>                                                          
				<entry>
					<key>fileName</key>
					<value>*.csv</value>
				</entry>             
					<entry>
					<key>service</key>
					<value>ComdataPaymentService</value>
				</entry>
				<entry>
                    <key>headerNames</key>				
                    <value>CheckNum|VendorNumber|VendorName|PaymentMethod|Status|PaymentDate|PaymentAmount|InvoiceAmount|CardNumber|ExpirationDate|CardIssuedDate|SwipedAmount|TransactionDateTime|PostedDateTime|FileName|CreatedDate</value>
                </entry>
				<entry>
					<key>headerline</key>
					<value>true</value>
				</entry>
				<entry>
					<key>archiveFilePath</key>
					<value>E:\\MiriaSystems\\DEV10\\Interfaces\\Inbound\\PostingReply\\Archive</value>
				</entry>
			</job-data-map>
		</job-detail>
		<trigger>
			<cron>
				<name>ComdataInboundJob</name>
				<group>invoiceOutputGroup</group>
				<job-name>allTrigger</job-name>
				<job-group>allTriggers</job-group>
				<cron-expression>0 4/10 * ? * *</cron-expression> <!-- every 10mins starting :04 of the hour-->
			</cron> 
		</trigger>
	</job>
</quartz>
